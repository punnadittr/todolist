!function(e){var t={};function n(d){if(t[d])return t[d].exports;var o=t[d]={i:d,l:!1,exports:{}};return e[d].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,d){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:d})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var d=Object.create(null);if(n.r(d),Object.defineProperty(d,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(d,o,function(t){return e[t]}.bind(null,o));return d},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var d=e=>{const t=document.createElement("div"),n=document.createElement("div"),d=document.createElement("div"),o=document.createElement("div"),a=document.createElement("h1");t.className="container",t.id="main-container",n.className="jumbotron",d.className="row justify-content-center",o.className="col-md-8",a.className="text-center display-3",a.innerHTML=e,o.appendChild(a),d.appendChild(o),n.appendChild(d),t.appendChild(n),document.body.prepend(t)};const o=(()=>{let e=[];const t=()=>e;return{addProject:t=>{e.push(t)},removeProject:t=>{e=e.filter(e=>e!=t)},allProjects:t,isDuplicate:n=>{for(let d=0;d<t().length;d++)if(e[d].projectTitle()===n)return!0;return!1}}})(),a=(e="Default")=>{let t=[];return{projectTitle:()=>e,todoLists:()=>t,appendItem:e=>{t.push(e)},removeList:e=>{t=t.filter(t=>t!=e)},rename:t=>{e=t}}};var r=(()=>{const e=()=>{const e=document.createElement("tbody"),t=document.getElementById("main-table");o.allProjects().forEach((n,d)=>{let o=document.createElement("tr"),a=document.createElement("td");e.id="table-body",o.id=`row-${d}`,a.innerText=n.projectTitle(),a.className="project-name",o.appendChild(a),e.appendChild(o),t.appendChild(e)})};return{renderTableHead:()=>{const e=["Project","Task","Priority","DueDate"],t=document.getElementById("main-container"),n=document.createElement("div"),d=document.createElement("div"),o=document.createElement("table"),a=document.createElement("thead"),r=document.createElement("tr");n.className="row justify-content-center",d.className="col-md-8",o.className="table table-borderless",o.id="main-table",a.className="thead-light";for(let t in e){let n=document.createElement("th");n.scope="col",n.id=e[t],n.innerText=e[t],r.appendChild(n)}a.appendChild(r),o.appendChild(a),d.appendChild(o),n.appendChild(d),t.appendChild(n)},renderProjectNames:e,renderTasks:e=>{const t=e,n=document.getElementById("table-body");t.todoLists().forEach((e,t)=>{let d=document.getElementById(`row-${t}`);if(null===d){(d=document.createElement("tr")).id=`row-${t}`;let e=document.createElement("td");e.className="placeholder",d.appendChild(e),n.appendChild(d)}let o=document.createElement("td"),a=document.createElement("td"),r=document.createElement("td");o.className="task-title",a.className="task-priority",r.className="task-duedate",o.innerText=`${e.listTitle()}`,a.innerText=`${e.listPriority()}`,r.innerText=`${e.listDueDate()}`,d.appendChild(o),d.appendChild(a),d.appendChild(r)})},resetTable:()=>{const t=document.getElementById("main-table"),n=t.childNodes[1];t.removeChild(n),e(),c.addEventToProjectNames()}}})();var l={findProjectByName:e=>o.allProjects().find(t=>t.projectTitle()===e)};var c=(()=>{let e;return{addEventToProjectNames:()=>{const t=document.getElementsByClassName("project-name");for(let n=0;n<t.length;n++)t[n].addEventListener("click",t=>{e=l.findProjectByName(t.target.textContent),console.log(e.projectTitle()),r.resetTable(),r.renderTasks(e)})},getCurrentProject:()=>e}})();const s={renderAddBtn:(e,t,n)=>{const d=document.getElementById(e);d.innerHTML=`${d.innerHTML} <i class="fas fa-plus-square" \n    data-toggle="modal" \n    data-target="#${t}"\n    id="${n}"></i>`}},i={renderAddTaskButton:()=>{s.renderAddBtn("Task","add-task-dialog","add-task-icon")},renderChangeTaskNameButton:()=>{},renderDeleteTaskButton:()=>{}},m={renderChangeProjectNameButton:()=>{},renderDeleteProjectButton:()=>{},renderAddProjectButton:()=>{s.renderAddBtn("Project","add-project-dialog","add-project-icon")}},u={renderAddProjectModal:()=>{f.createFormModal("project","add-project-dialog","Add New Project","add-project-btn","Add Project")},resetModal:()=>{const e=document.getElementById("add-project-dialog");null!=e&&e.parentNode.removeChild(e)},displayErrorMsg:e=>{const t=document.getElementsByTagName("label")[0];t.innerText=e,t.style.color="red"}},p=(()=>{const e=()=>{let e="",t=[];return o.allProjects().forEach(e=>{t.push(e.projectTitle())}),t.forEach(t=>{e+=`<option>${t}</option>`}),e};return{renderAddTaskModal:()=>{f.createFormModal("task","add-task-dialog","Add New Task","add-task-btn","Add Task",e())},resetModal:()=>{const e=document.getElementById("add-task-dialog");null!=e&&e.parentNode.removeChild(e)},displayErrorMsg:(e,t)=>{if("nameError"===e){const e=document.getElementById("task-name-label");e.innerText=t,e.style.color="red"}else{const e=document.getElementById("duedate-label");e.innerText=t,e.style.color="red"}},renderProjectSelect:e}})(),f={createFormModal:(e,t,n,d,o,a="")=>{const r=document.createElement("div");r.className="modal fade",r.id=t,r.innerHTML=`<div class="modal-dialog modal-dialog-centered" role="document">\n      <div class="modal-content">\n        <div class="modal-header">\n          <h5 class="modal-title">${n}</h5>\n          <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n            <span aria-hidden="true">&times;</span>\n          </button>\n        </div>\n        <div class="modal-body">     \n         ${(e=>"project"===e?'<form>\n                  <div class="form-group">\n                    <label for="add-project-field" class="col-form-label">Enter Project Name</label>\n                    <input type="text" class="form-control" id="add-project-field">\n                  </div>\n                </form>':`<form>\n                  <div class="form-group">\n                    <label id="select-project-label" for="select-project" class="col-form-label">Select Project</label>\n                    <select class="form-control" id="project-select">\n                    ${a}\n                    </select>\n                    <label id="task-name-label" for="add-task-field" class="col-form-label">Enter Task Name</label>\n                    <input type="text" class="form-control" id="add-task-name-field">\n                    <label id="priority-label" for="priority-select" class="col-form-label">Priority</label>\n                    <select class="form-control" id="priority-select">\n                      <option>Low</option>\n                      <option>Normal</option>\n                      <option>High</option>\n                    </select>\n                    <label id="duedate-label" for="task-date" class="col-form-label">Due Date</label>\n                    <input id="task-date" class="form-control" type="date">\n                  </div>\n                </form>`)(e)}\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>\n          <button type="button" class="btn btn-primary" id="${d}">${o}</button>\n        </div>\n      </div>\n    </div>`,document.getElementById("main-container").appendChild(r)}};var b=(e,t,n)=>{let d=[];return{checkLists:()=>d,listTitle:()=>e,listDueDate:()=>t,listPriority:()=>n,taskDone:()=>!1,addTocheckList:e=>{d.push(e)},removeFromcheckList:e=>{d=d.filter(t=>t!=e)},changeTitle:t=>{e=t},changePriority:e=>{n=e},changeDate:e=>{t=e}}};var y=(()=>{const e=()=>{document.getElementById("add-project-btn").addEventListener("click",()=>{const e=document.getElementById("add-project-field").value;if(!0===o.isDuplicate(e))u.displayErrorMsg("Cannot create a duplicate project name");else if(""===e.trim())u.displayErrorMsg("Project name cannot be empty");else{const t=a(e);o.addProject(t),r.resetTable()}})},t=()=>{document.getElementById("add-task-btn").addEventListener("click",()=>{const e=document.getElementById("project-select").value,t=document.getElementById("add-task-name-field").value,n=document.getElementById("priority-select").value,d=document.getElementById("task-date").value;if(""===t.trim())p.displayErrorMsg("nameError","Task name cannot be empty");else{const o=b(t,d,n),a=l.findProjectByName(e);console.log(a.projectTitle()),a.appendItem(o),r.resetTable()}})};return{addEventToProjectIcon:()=>{document.getElementById("add-project-icon").addEventListener("click",()=>{u.resetModal(),u.renderAddProjectModal(),e()})},addEventToTaskIcon:()=>{document.getElementById("add-task-icon").addEventListener("click",()=>{p.resetModal(),p.renderAddTaskModal(),t()})}}})();const j=a("Default");o.addProject(j),d("TO DO LIST"),r.renderTableHead(),r.renderProjectNames(),c.addEventToProjectNames(),m.renderAddProjectButton(),i.renderAddTaskButton(),y.addEventToProjectIcon(),y.addEventToTaskIcon(),console.log(l.findProjectByName("FestBrooke"))}]);